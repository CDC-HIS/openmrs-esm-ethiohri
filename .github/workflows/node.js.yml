name: Node.js CI

on:
  push:
    branches: [master,develop,etho_datepicker]
  pull_request:
    branches: [master]
  release:
    types:
      - created

env:
  ESM_NAME: "@icap-ethiopia/esm-ethiohri-app"
  JS_NAME: "openmrs-esm-ethiohri-app.js"

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - run: yarn
      - run: yarn lint
      - run: yarn coverage
      - run: yarn typescript
      - run: yarn build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

  pre_release:
    runs-on: ubuntu-20.04

    needs: build

    #if: ${{ github.event_name == 'push' }}

    steps:
      - run: echo "Uncomment the lines below and delete this one."
      # - uses: actions/checkout@v2
      # - name: Download Artifacts
      #   uses: actions/download-artifact@v2
      # - name: Use Node.js
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "16.x"
      #     registry-url: "https://registry.npmjs.org"
      # - run: npm install
      # - run: sed -i -e "s/\(\"version\":\\s\+\"\([0-9]\+\.\?\)\+\)/\1-pre.${{ github.run_number }}/" 'package.json'
      # - run: npm publish --access public --tag next
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  release:
    runs-on: ubuntu-20.04

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
          registry-url: 'https://registry.npmjs.org'

      - run: sed -i -e "s/\(\"version\":\\s\+\"\([0-9]\+\.\?\)\+\)/\1-pre.${{ github.run_number }}/" 'package.json'
#       - run: sed -i -e "s/\(\"version\":\\s\+\"\([0-9]\+\.\?\)\+\)/\1-pre.140/" 'package.json'
      - run: yarn install
      - run: yarn build
      - run: yarn cipublish --access public --tag next --no-git-tag-version
#       - run: yarn publish --tag next --no-git-tag-version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}


  dev:
      runs-on: ubuntu-20.04
      #Test
      needs: release

      if: ${{ github.ref == 'refs/heads/develop' }}

      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v3
        - name: Compute Timestamp
          run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        - uses: garygrossgarten/github-action-ssh@release
          name: Run the Update MicroFronEnd Script on dev server
          with:
              command: cd /usr/share/tomcat/frontendmodules/ && /bin/bash update_frontend_modules.sh
              host: ${{ secrets.ETHIOHRI_HOST }}
              username: ${{ secrets.ETHIOHRI_USER }}
              privateKey: ${{ secrets.ETHIOHRI_DEV_PRIVATE_KEY}}
  demo:
      runs-on: ubuntu-20.04
      needs: release

      if: ${{ github.ref == 'refs/heads/develop' }}

      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v3
        - name: Compute Timestamp
          run: echo "TIMESTAMP=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        - uses: garygrossgarten/github-action-ssh@release
          name: Run the Update MicroFronEnd Script on Demo server
          with:
              command: cd /usr/share/tomcat7/frontendmodules/ && /bin/bash update_frontend_moduless.sh
              host: ${{ secrets.ETHIOHRI_DEMO_HOST }}
              username: ${{ secrets.ETHIOHRI_DEMO_USER }}
              privateKey: ${{ secrets.ETHIOHRI_DEMO_PRIVATE_KEY}}  
